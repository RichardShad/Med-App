; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+o o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; Starting Jack-in Terminal: lein update-in :dependencies conj '[nrepl,"0.9.0"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.27.4"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉medicine.core꞉>  ; Use `alt+enter` to evaluate
; Jack-in done.
clj꞉medicine.core꞉> (ns core)
nil
clj꞉core꞉> (defn const-d [^double c] (fn [& _] ^double c))
#'core/const-d
clj꞉core꞉> (meta const-d)
nil
clj꞉core꞉> (/ 3.0 ((const-d 0.0) {}))
##Inf
clj꞉core꞉> (defn const [c] (with-meta (fn [& _] c)))
#'core/const
clj꞉core꞉> (/ 3.0 ((const 0.0) {}))
; Execution error (ArityException) at core/const (form-init13806836614540510159.clj:28).
; Wrong number of args (1) passed to: clojure.core/with-meta--5485
clj꞉core꞉> (defn const ([^double d] (fn [& _] ^double c)) ([c] (fn [& _] c)))
; Syntax error compiling at (.calva/output-window/output.calva-repl:33:56).
; Unable to resolve symbol: c in this context
clj꞉core꞉> 
; Syntax error compiling at (.calva/output-window/output.calva-repl:33:37).
; Unable to resolve symbol: c in this context
clj꞉core꞉> 
; nREPL Connection was closed
